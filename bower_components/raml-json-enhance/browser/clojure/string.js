goog.provide("clojure.string"),goog.require("cljs.core"),goog.require("goog.string"),goog.require("goog.string.StringBuffer"),clojure.string.seq_reverse=function(r){return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,r)},clojure.string.re_surrogate_pair=new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])","g"),clojure.string.reverse=function(r){return r.replace(clojure.string.re_surrogate_pair,"$2$1").split("").reverse().join("")},clojure.string.replace_all=function(r,e,n){return r.replace(new RegExp(e.source,"g"),n)},clojure.string.replace_with=function(r){return function(){var e=function(e){var n=cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(2,e);if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(n),1)){var c=cljs.core.first(n);return r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(c):r.call(null,c)}var o=cljs.core.vec(n);return r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(o):r.call(null,o)},n=function(r){var n=null;if(arguments.length>0){for(var c=0,o=new Array(arguments.length-0);c<o.length;)o[c]=arguments[c+0],++c;n=new cljs.core.IndexedSeq(o,0)}return e.call(this,n)};return n.cljs$lang$maxFixedArity=0,n.cljs$lang$applyTo=function(r){var n=cljs.core.seq(r);return e(n)},n.cljs$core$IFn$_invoke$arity$variadic=e,n}()},clojure.string.replace=function(r,e,n){if("string"==typeof e)return r.replace(new RegExp(goog.string.regExpEscape(e),"g"),n);if(e instanceof RegExp)return"string"==typeof n?clojure.string.replace_all(r,e,n):clojure.string.replace_all(r,e,clojure.string.replace_with(n));throw[cljs.core.str("Invalid match arg: "),cljs.core.str(e)].join("")},clojure.string.replace_first=function(r,e,n){return r.replace(e,n)},clojure.string.join=function(r){for(var e=[],n=arguments.length,c=0;;){if(!(c<n))break;e.push(arguments[c]);var o=c+1;c=o}var t=e.length;switch(t){case 1:return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);case 2:return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);default:throw new Error([cljs.core.str("Invalid arity: "),cljs.core.str(e.length)].join(""))}},clojure.string.join.cljs$core$IFn$_invoke$arity$1=function(r){for(var e=new goog.string.StringBuffer,n=cljs.core.seq(r);;){if(null==n)return e.toString();var c=e.append([cljs.core.str(cljs.core.first(n))].join("")),o=cljs.core.next(n);e=c,n=o}},clojure.string.join.cljs$core$IFn$_invoke$arity$2=function(r,e){for(var n=new goog.string.StringBuffer,c=cljs.core.seq(e);;){if(null==c)return n.toString();n.append([cljs.core.str(cljs.core.first(c))].join(""));var o=cljs.core.next(c);null==o||n.append(r);var t=n,i=o;n=t,c=i}},clojure.string.join.cljs$lang$maxFixedArity=2,clojure.string.upper_case=function(r){return r.toUpperCase()},clojure.string.lower_case=function(r){return r.toLowerCase()},clojure.string.capitalize=function(r){return cljs.core.count(r)<2?clojure.string.upper_case(r):[cljs.core.str(clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(r,0,1))),cljs.core.str(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(r,1)))].join("")},clojure.string.pop_last_while_empty=function(r){for(var e=r;;){if(""!==cljs.core.peek(e))return e;var n=cljs.core.pop(e);e=n}},clojure.string.discard_trailing_if_needed=function(r,e){return 0===r&&1<cljs.core.count(e)?clojure.string.pop_last_while_empty(e):e},clojure.string.split_with_empty_regex=function(r,e){if(e<=0||e>=2+cljs.core.count(r))return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("",cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.seq(r)))),"");var n=cljs.core._EQ__EQ_,c=e;if(cljs.core.truth_(n.cljs$core$IFn$_invoke$arity$2?n.cljs$core$IFn$_invoke$arity$2(1,c):n.call(null,1,c)))return new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[r],null);if(cljs.core.truth_(n.cljs$core$IFn$_invoke$arity$2?n.cljs$core$IFn$_invoke$arity$2(2,c):n.call(null,2,c)))return new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,["",r],null);var o=e-2;return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("",cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.seq(r))),0,o))),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(r,o))},clojure.string.split=function(r){for(var e=[],n=arguments.length,c=0;;){if(!(c<n))break;e.push(arguments[c]);var o=c+1;c=o}var t=e.length;switch(t){case 2:return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error([cljs.core.str("Invalid arity: "),cljs.core.str(e.length)].join(""))}},clojure.string.split.cljs$core$IFn$_invoke$arity$2=function(r,e){return clojure.string.split.cljs$core$IFn$_invoke$arity$3(r,e,0)},clojure.string.split.cljs$core$IFn$_invoke$arity$3=function(r,e,n){return clojure.string.discard_trailing_if_needed(n,"/(?:)/"===[cljs.core.str(e)].join("")?clojure.string.split_with_empty_regex(r,n):n<1?cljs.core.vec([cljs.core.str(r)].join("").split(e)):function(){for(var c=r,o=n,t=cljs.core.PersistentVector.EMPTY;;){if(1===o)return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(t,c);var i=cljs.core.re_find(e,c);{if(null==i)return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(t,c);var s=c.indexOf(i),l=c.substring(s+cljs.core.count(i)),$=o-1,u=cljs.core.conj.cljs$core$IFn$_invoke$arity$2(t,c.substring(0,s));c=l,o=$,t=u}}}())},clojure.string.split.cljs$lang$maxFixedArity=3,clojure.string.split_lines=function(r){return clojure.string.split.cljs$core$IFn$_invoke$arity$2(r,/\n|\r\n/)},clojure.string.trim=function(r){return goog.string.trim(r)},clojure.string.triml=function(r){return goog.string.trimLeft(r)},clojure.string.trimr=function(r){return goog.string.trimRight(r)},clojure.string.trim_newline=function(r){for(var e=r.length;;){if(0===e)return"";var n=cljs.core.get.cljs$core$IFn$_invoke$arity$2(r,e-1);{if("\n"!==n&&"\r"!==n)return r.substring(0,e);var c=e-1;e=c}}},clojure.string.blank_QMARK_=function(r){return goog.string.isEmptySafe(r)},clojure.string.escape=function(r,e){for(var n=new goog.string.StringBuffer,c=r.length,o=0;;){if(c===o)return n.toString();var t=r.charAt(o),i=cljs.core.get.cljs$core$IFn$_invoke$arity$2(e,t);null!=i?n.append([cljs.core.str(i)].join("")):n.append(t);var s=o+1;o=s}},clojure.string.index_of=function(r){for(var e=[],n=arguments.length,c=0;;){if(!(c<n))break;e.push(arguments[c]);var o=c+1;c=o}var t=e.length;switch(t){case 2:return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error([cljs.core.str("Invalid arity: "),cljs.core.str(e.length)].join(""))}},clojure.string.index_of.cljs$core$IFn$_invoke$arity$2=function(r,e){var n=r.indexOf(e);return n<0?null:n},clojure.string.index_of.cljs$core$IFn$_invoke$arity$3=function(r,e,n){var c=r.indexOf(e,n);return c<0?null:c},clojure.string.index_of.cljs$lang$maxFixedArity=3,clojure.string.last_index_of=function(r){for(var e=[],n=arguments.length,c=0;;){if(!(c<n))break;e.push(arguments[c]);var o=c+1;c=o}var t=e.length;switch(t){case 2:return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error([cljs.core.str("Invalid arity: "),cljs.core.str(e.length)].join(""))}},clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2=function(r,e){var n=r.lastIndexOf(e);return n<0?null:n},clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3=function(r,e,n){var c=r.lastIndexOf(e,n);return c<0?null:c},clojure.string.last_index_of.cljs$lang$maxFixedArity=3,clojure.string.starts_with_QMARK_=function(r,e){return goog.string.startsWith(r,e)},clojure.string.ends_with_QMARK_=function(r,e){return goog.string.endsWith(r,e)},clojure.string.includes_QMARK_=function(r,e){return goog.string.contains(r,e)};