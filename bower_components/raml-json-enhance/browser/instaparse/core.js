goog.provide("instaparse.core"),goog.require("cljs.core"),goog.require("instaparse.transform"),goog.require("instaparse.combinators_source"),goog.require("instaparse.abnf"),goog.require("instaparse.gll"),goog.require("instaparse.line_col"),goog.require("instaparse.print"),goog.require("instaparse.cfg"),goog.require("instaparse.reduction"),goog.require("instaparse.failure"),goog.require("instaparse.repeat"),instaparse.core._STAR_default_output_format_STAR_=cljs.core.cst$kw$hiccup,instaparse.core.set_default_output_format_BANG_=function(r){if(!cljs.core.truth_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[cljs.core.cst$kw$hiccup,null,cljs.core.cst$kw$enlive,null],null),null).call(null,r)))throw new Error("Assert failed: (#{:hiccup :enlive} type)");return instaparse.core._STAR_default_output_format_STAR_=r},instaparse.core._STAR_default_input_format_STAR_=cljs.core.cst$kw$ebnf,instaparse.core.set_default_input_format_BANG_=function(r){if(!cljs.core.truth_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[cljs.core.cst$kw$ebnf,null,cljs.core.cst$kw$abnf,null],null),null).call(null,r)))throw new Error("Assert failed: (#{:ebnf :abnf} type)");return instaparse.core._STAR_default_input_format_STAR_=r},instaparse.core.unhide_parser=function(r,e){var c=e;if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,c))return r;if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$content,c))return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(r,cljs.core.cst$kw$grammar,instaparse.combinators_source.unhide_all_content(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(r)));if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$tags,c))return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(r,cljs.core.cst$kw$grammar,instaparse.combinators_source.unhide_tags(cljs.core.cst$kw$output_DASH_format.cljs$core$IFn$_invoke$arity$1(r),cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(r)));if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$all,c))return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(r,cljs.core.cst$kw$grammar,instaparse.combinators_source.unhide_all(cljs.core.cst$kw$output_DASH_format.cljs$core$IFn$_invoke$arity$1(r),cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(r)));throw new Error([cljs.core.str("No matching clause: "),cljs.core.str(e)].join(""))},instaparse.core.parse=function(r){for(var e=[],c=arguments.length,s=0;;){if(!(s<c))break;e.push(arguments[s]);var t=s+1;s=t}var o=2<e.length?new cljs.core.IndexedSeq(e.slice(2),0,null):null;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],o)},instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic=function(r,e,c){var s=c,t=null==s||!(64&s.cljs$lang$protocol_mask$partition0$||s.cljs$core$ISeq$)?s:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,s),o=t;if(!cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,4,[null,null,cljs.core.cst$kw$tags,null,cljs.core.cst$kw$content,null,cljs.core.cst$kw$all,null],null),null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(o,cljs.core.cst$kw$unhide)))throw new Error("Assert failed: (contains? #{nil :tags :content :all} (get options :unhide))");if(!cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[null,null,cljs.core.cst$kw$memory,null],null),null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(o,cljs.core.cst$kw$optimize)))throw new Error("Assert failed: (contains? #{nil :memory} (get options :optimize))");var a=cljs.core.get.cljs$core$IFn$_invoke$arity$3(o,cljs.core.cst$kw$start,cljs.core.cst$kw$start_DASH_production.cljs$core$IFn$_invoke$arity$1(r)),n=cljs.core.get.cljs$core$IFn$_invoke$arity$3(o,cljs.core.cst$kw$partial,!1),$=cljs.core.get.cljs$core$IFn$_invoke$arity$3(o,cljs.core.cst$kw$optimize,!1),l=cljs.core.get.cljs$core$IFn$_invoke$arity$2(o,cljs.core.cst$kw$unhide),i=instaparse.core.unhide_parser(r,l);if(cljs.core.truth_(cljs.core.cst$kw$total.cljs$core$IFn$_invoke$arity$1(o)))return instaparse.gll.parse_total(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(i),a,e,n,function(){var r=cljs.core.cst$kw$output_DASH_format.cljs$core$IFn$_invoke$arity$1(i);return instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1?instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1(r):instaparse.reduction.node_builders.call(null,r)}());if(cljs.core.truth_(function(){var r=$;return cljs.core.truth_(r)?cljs.core.not(n):r}())){var _=instaparse.repeat.try_repeating_parse_strategy(i,e,a);return cljs.core.truth_(instaparse.core.failure_QMARK_.cljs$core$IFn$_invoke$arity$1?instaparse.core.failure_QMARK_.cljs$core$IFn$_invoke$arity$1(_):instaparse.core.failure_QMARK_.call(null,_))?instaparse.gll.parse(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(i),a,e,n):_}return instaparse.gll.parse(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(i),a,e,n)},instaparse.core.parse.cljs$lang$maxFixedArity=2,instaparse.core.parse.cljs$lang$applyTo=function(r){var e=cljs.core.first(r),c=cljs.core.next(r),s=cljs.core.first(c),t=cljs.core.next(c);return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(e,s,t)},instaparse.core.parses=function(r){for(var e=[],c=arguments.length,s=0;;){if(!(s<c))break;e.push(arguments[s]);var t=s+1;s=t}var o=2<e.length?new cljs.core.IndexedSeq(e.slice(2),0,null):null;return instaparse.core.parses.cljs$core$IFn$_invoke$arity$variadic(arguments[0],arguments[1],o)},instaparse.core.parses.cljs$core$IFn$_invoke$arity$variadic=function(r,e,c){var s=c,t=null==s||!(64&s.cljs$lang$protocol_mask$partition0$||s.cljs$core$ISeq$)?s:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,s),o=t;if(!cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,4,[null,null,cljs.core.cst$kw$tags,null,cljs.core.cst$kw$content,null,cljs.core.cst$kw$all,null],null),null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(o,cljs.core.cst$kw$unhide)))throw new Error("Assert failed: (contains? #{nil :tags :content :all} (get options :unhide))");var a=cljs.core.get.cljs$core$IFn$_invoke$arity$3(o,cljs.core.cst$kw$start,cljs.core.cst$kw$start_DASH_production.cljs$core$IFn$_invoke$arity$1(r)),n=cljs.core.get.cljs$core$IFn$_invoke$arity$3(o,cljs.core.cst$kw$partial,!1),$=cljs.core.get.cljs$core$IFn$_invoke$arity$2(o,cljs.core.cst$kw$unhide),l=instaparse.core.unhide_parser(r,$);return cljs.core.truth_(cljs.core.cst$kw$total.cljs$core$IFn$_invoke$arity$1(o))?instaparse.gll.parses_total(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(l),a,e,n,function(){var r=cljs.core.cst$kw$output_DASH_format.cljs$core$IFn$_invoke$arity$1(l);return instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1?instaparse.reduction.node_builders.cljs$core$IFn$_invoke$arity$1(r):instaparse.reduction.node_builders.call(null,r)}()):instaparse.gll.parses(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(l),a,e,n)},instaparse.core.parses.cljs$lang$maxFixedArity=2,instaparse.core.parses.cljs$lang$applyTo=function(r){var e=cljs.core.first(r),c=cljs.core.next(r),s=cljs.core.first(c),t=cljs.core.next(c);return instaparse.core.parses.cljs$core$IFn$_invoke$arity$variadic(e,s,t)},instaparse.core.Parser=function(r,e,c,s,t,o){this.grammar=r,this.start_production=e,this.output_format=c,this.__meta=s,this.__extmap=t,this.__hash=o,this.cljs$lang$protocol_mask$partition0$=2229667595,this.cljs$lang$protocol_mask$partition1$=8192},instaparse.core.Parser.prototype.cljs$core$ILookup$_lookup$arity$2=function(r,e){var c=this;return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(c,e,null)},instaparse.core.Parser.prototype.cljs$core$ILookup$_lookup$arity$3=function(r,e,c){var s=this,t=e instanceof cljs.core.Keyword?e.fqn:null;switch(t){case"grammar":return s.grammar;case"start-production":return s.start_production;case"output-format":return s.output_format;default:return cljs.core.get.cljs$core$IFn$_invoke$arity$3(s.__extmap,e,c)}},instaparse.core.Parser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(r,e,c){var s=this,t=this,o=function(r){return function(r){return cljs.core.pr_sequential_writer(e,cljs.core.pr_writer,""," ","",c,r)}}(t);return cljs.core.pr_sequential_writer(e,o,"#instaparse.core.Parser{",", ","}",c,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$grammar,s.grammar],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$start_DASH_production,s.start_production],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$output_DASH_format,s.output_format],null)],null),s.__extmap))},instaparse.core.Parser.prototype.cljs$core$IIterable$=!0,instaparse.core.Parser.prototype.cljs$core$IIterable$_iterator$arity$1=function(r){var e=this,c=this;return new cljs.core.RecordIter(0,c,3,new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$grammar,cljs.core.cst$kw$start_DASH_production,cljs.core.cst$kw$output_DASH_format],null),cljs.core._iterator(e.__extmap))},instaparse.core.Parser.prototype.cljs$core$IMeta$_meta$arity$1=function(r){var e=this;return e.__meta},instaparse.core.Parser.prototype.cljs$core$ICloneable$_clone$arity$1=function(r){var e=this;return new instaparse.core.Parser(e.grammar,e.start_production,e.output_format,e.__meta,e.__extmap,e.__hash)},instaparse.core.Parser.prototype.cljs$core$ICounted$_count$arity$1=function(r){var e=this;return 3+cljs.core.count(e.__extmap)},instaparse.core.Parser.prototype.cljs$core$IHash$_hash$arity$1=function(r){var e=this,c=this,s=e.__hash;if(null!=s)return s;var t=cljs.core.hash_imap(c);return e.__hash=t,t},instaparse.core.Parser.prototype.cljs$core$IEquiv$_equiv$arity$2=function(r,e){var c=this;return!!cljs.core.truth_(function(){var r=e;if(cljs.core.truth_(r)){var s=c.constructor===e.constructor;return s?cljs.core.equiv_map(c,e):s}return r}())},instaparse.core.Parser.prototype.cljs$core$IMap$_dissoc$arity$2=function(r,e){var c=this,s=this;return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,3,[cljs.core.cst$kw$start_DASH_production,null,cljs.core.cst$kw$grammar,null,cljs.core.cst$kw$output_DASH_format,null],null),null),e)?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,s),c.__meta),e):new instaparse.core.Parser(c.grammar,c.start_production,c.output_format,c.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(c.__extmap,e)),null)},instaparse.core.Parser.prototype.cljs$core$IAssociative$_assoc$arity$3=function(r,e,c){var s=this,t=cljs.core.keyword_identical_QMARK_,o=e;return cljs.core.truth_(t.cljs$core$IFn$_invoke$arity$2?t.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$grammar,o):t.call(null,cljs.core.cst$kw$grammar,o))?new instaparse.core.Parser(c,s.start_production,s.output_format,s.__meta,s.__extmap,null):cljs.core.truth_(t.cljs$core$IFn$_invoke$arity$2?t.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$start_DASH_production,o):t.call(null,cljs.core.cst$kw$start_DASH_production,o))?new instaparse.core.Parser(s.grammar,c,s.output_format,s.__meta,s.__extmap,null):cljs.core.truth_(t.cljs$core$IFn$_invoke$arity$2?t.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$output_DASH_format,o):t.call(null,cljs.core.cst$kw$output_DASH_format,o))?new instaparse.core.Parser(s.grammar,s.start_production,c,s.__meta,s.__extmap,null):new instaparse.core.Parser(s.grammar,s.start_production,s.output_format,s.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(s.__extmap,e,c),null)},instaparse.core.Parser.prototype.cljs$core$ISeqable$_seq$arity$1=function(r){var e=this;return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$grammar,e.grammar],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$start_DASH_production,e.start_production],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$output_DASH_format,e.output_format],null)],null),e.__extmap))},instaparse.core.Parser.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(r,e){var c=this;return new instaparse.core.Parser(c.grammar,c.start_production,c.output_format,e,c.__extmap,c.__hash)},instaparse.core.Parser.prototype.cljs$core$ICollection$_conj$arity$2=function(r,e){var c=this;return cljs.core.vector_QMARK_(e)?cljs.core._assoc(c,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,1)):cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,c,e)},instaparse.core.Parser.prototype.call=function(){var r=null,e=function(r,e){var c=this,s=c;return instaparse.core.parse(s,e)},c=function(r,e,c,s){var t=this,o=t;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(o,e,cljs.core.array_seq([c,s],0))},s=function(r,e,c,s,t,o){var a=this,n=a;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(n,e,cljs.core.array_seq([c,s,t,o],0))},t=function(r,e,c,s,t,o,a,n){var $=this,l=$;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(l,e,cljs.core.array_seq([c,s,t,o,a,n],0))};return r=function(r,o,a,n,$,l,i,_){switch(arguments.length){case 2:return e.call(this,r,o);case 4:return c.call(this,r,o,a,n);case 6:return s.call(this,r,o,a,n,$,l);case 8:return t.call(this,r,o,a,n,$,l,i,_)}throw new Error("Invalid arity: "+arguments.length)},r.cljs$core$IFn$_invoke$arity$2=e,r.cljs$core$IFn$_invoke$arity$4=c,r.cljs$core$IFn$_invoke$arity$6=s,r.cljs$core$IFn$_invoke$arity$8=t,r}(),instaparse.core.Parser.prototype.apply=function(r,e){var c=this;return c.call.apply(c,[c].concat(cljs.core.aclone(e)))},instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$1=function(r){var e=this;return instaparse.core.parse(e,r)},instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$3=function(r,e,c){var s=this;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(s,r,cljs.core.array_seq([e,c],0))},instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$5=function(r,e,c,s,t){var o=this;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(o,r,cljs.core.array_seq([e,c,s,t],0))},instaparse.core.Parser.prototype.cljs$core$IFn$_invoke$arity$7=function(r,e,c,s,t,o,a){var n=this;return instaparse.core.parse.cljs$core$IFn$_invoke$arity$variadic(n,r,cljs.core.array_seq([e,c,s,t,o,a],0))},instaparse.core.Parser.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$sym$grammar,cljs.core.cst$sym$start_DASH_production,cljs.core.cst$sym$output_DASH_format],null)},instaparse.core.Parser.cljs$lang$type=!0,instaparse.core.Parser.cljs$lang$ctorPrSeq=function(r){return cljs.core._conj(cljs.core.List.EMPTY,"instaparse.core/Parser")},instaparse.core.Parser.cljs$lang$ctorPrWriter=function(r,e){return cljs.core._write(e,"instaparse.core/Parser")},instaparse.core.__GT_Parser=function(r,e,c){return new instaparse.core.Parser(r,e,c,null,null,null)},instaparse.core.map__GT_Parser=function(r){return new instaparse.core.Parser(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(r),cljs.core.cst$kw$start_DASH_production.cljs$core$IFn$_invoke$arity$1(r),cljs.core.cst$kw$output_DASH_format.cljs$core$IFn$_invoke$arity$1(r),null,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(r,cljs.core.cst$kw$grammar,cljs.core.array_seq([cljs.core.cst$kw$start_DASH_production,cljs.core.cst$kw$output_DASH_format],0)),null)},instaparse.core.Parser.prototype.cljs$core$IPrintWithWriter$=!0,instaparse.core.Parser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(r,e,c){var s=this;return cljs.core._write(e,instaparse.print.Parser__GT_str(s))},instaparse.core.parser=function(r){for(var e=[],c=arguments.length,s=0;;){if(!(s<c))break;e.push(arguments[s]);var t=s+1;s=t}var o=1<e.length?new cljs.core.IndexedSeq(e.slice(1),0,null):null;return instaparse.core.parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0],o)},instaparse.core.parser.cljs$core$IFn$_invoke$arity$variadic=function(r,e){var c=e,s=null==c||!(64&c.cljs$lang$protocol_mask$partition0$||c.cljs$core$ISeq$)?c:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,c),t=s;if(!cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,3,[null,null,cljs.core.cst$kw$ebnf,null,cljs.core.cst$kw$abnf,null],null),null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.cst$kw$input_DASH_format)))throw new Error("Assert failed: (contains? #{nil :ebnf :abnf} (get options :input-format))");if(!cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,3,[null,null,cljs.core.cst$kw$hiccup,null,cljs.core.cst$kw$enlive,null],null),null),cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.cst$kw$output_DASH_format)))throw new Error("Assert failed: (contains? #{nil :hiccup :enlive} (get options :output-format))");if(!function(){var r=cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.cst$kw$auto_DASH_whitespace);return null==r||cljs.core.contains_QMARK_(instaparse.core.standard_whitespace_parsers,r)||cljs.core.map_QMARK_(r)&&cljs.core.contains_QMARK_(r,cljs.core.cst$kw$grammar)&&cljs.core.contains_QMARK_(r,cljs.core.cst$kw$start_DASH_production)}())throw new Error("Assert failed: (let [ws-parser (get options :auto-whitespace)] (or (nil? ws-parser) (contains? standard-whitespace-parsers ws-parser) (and (map? ws-parser) (contains? ws-parser :grammar) (contains? ws-parser :start-production))))");var o=cljs.core.get.cljs$core$IFn$_invoke$arity$3(t,cljs.core.cst$kw$input_DASH_format,instaparse.core._STAR_default_input_format_STAR_),a=function(){var r=o instanceof cljs.core.Keyword?o.fqn:null;switch(r){case"abnf":return instaparse.abnf.build_parser;case"ebnf":return cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.cst$kw$string_DASH_ci))?function(r,e,c,s,t){return function(r,e){var c=instaparse.cfg._STAR_case_insensitive_literals_STAR_;instaparse.cfg._STAR_case_insensitive_literals_STAR_=!0;try{return instaparse.cfg.build_parser(r,e)}finally{instaparse.cfg._STAR_case_insensitive_literals_STAR_=c}}}(r,o,c,s,t):instaparse.cfg.build_parser;default:throw new Error([cljs.core.str("No matching clause: "),cljs.core.str(o)].join(""))}}(),n=cljs.core.get.cljs$core$IFn$_invoke$arity$3(t,cljs.core.cst$kw$output_DASH_format,instaparse.core._STAR_default_output_format_STAR_),$=cljs.core.get.cljs$core$IFn$_invoke$arity$3(t,cljs.core.cst$kw$start,null),l="string"==typeof r?function(){var e=a.cljs$core$IFn$_invoke$arity$2?a.cljs$core$IFn$_invoke$arity$2(r,n):a.call(null,r,n);return cljs.core.truth_($)?instaparse.core.map__GT_Parser(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(e,cljs.core.cst$kw$start_DASH_production,$)):instaparse.core.map__GT_Parser(e)}():cljs.core.map_QMARK_(r)?function(){var e=instaparse.cfg.build_parser_from_combinators(r,n,$);return instaparse.core.map__GT_Parser(e)}():cljs.core.vector_QMARK_(r)?function(){var e=cljs.core.truth_($)?$:r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(0):r.call(null,0),c=instaparse.cfg.build_parser_from_combinators(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,r),n,e);return instaparse.core.map__GT_Parser(c)}():null,i=cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.cst$kw$auto_DASH_whitespace),_=i instanceof cljs.core.Keyword?cljs.core.get.cljs$core$IFn$_invoke$arity$2(instaparse.core.standard_whitespace_parsers,i):i,u=_;if(cljs.core.truth_(u)){var p=u,j=null==p||!(64&p.cljs$lang$protocol_mask$partition0$||p.cljs$core$ISeq$)?p:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,p),k=cljs.core.get.cljs$core$IFn$_invoke$arity$2(j,cljs.core.cst$kw$grammar),v=cljs.core.get.cljs$core$IFn$_invoke$arity$2(j,cljs.core.cst$kw$start_DASH_production);return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(l,cljs.core.cst$kw$grammar,instaparse.combinators_source.auto_whitespace(cljs.core.cst$kw$grammar.cljs$core$IFn$_invoke$arity$1(l),cljs.core.cst$kw$start_DASH_production.cljs$core$IFn$_invoke$arity$1(l),k,v))}return l},instaparse.core.parser.cljs$lang$maxFixedArity=1,instaparse.core.parser.cljs$lang$applyTo=function(r){var e=cljs.core.first(r),c=cljs.core.next(r);return instaparse.core.parser.cljs$core$IFn$_invoke$arity$variadic(e,c)},instaparse.core.failure_QMARK_=function(r){return r instanceof instaparse.gll.Failure||cljs.core.meta(r)instanceof instaparse.gll.Failure},instaparse.core.get_failure=function(r){return r instanceof instaparse.gll.Failure?r:cljs.core.meta(r)instanceof instaparse.gll.Failure?cljs.core.meta(r):null},instaparse.core.transform=instaparse.transform.transform,instaparse.core.add_line_and_column_info_to_metadata=instaparse.line_col.add_line_col_spans,instaparse.core.standard_whitespace_parsers=new cljs.core.PersistentArrayMap(null,2,[cljs.core.cst$kw$standard,instaparse.core.parser("whitespace = #'\\s+'"),cljs.core.cst$kw$comma,instaparse.core.parser("whitespace = #'[,\\s]+'")],null);