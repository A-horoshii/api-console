goog.provide("instaparse.line_col"),goog.require("cljs.core"),goog.require("instaparse.transform"),instaparse.line_col.Cursor=function(e,r,c,s,n,l){this.index=e,this.line=r,this.column=c,this.__meta=s,this.__extmap=n,this.__hash=l,this.cljs$lang$protocol_mask$partition0$=2229667594,this.cljs$lang$protocol_mask$partition1$=8192},instaparse.line_col.Cursor.prototype.cljs$core$ILookup$_lookup$arity$2=function(e,r){var c=this;return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(c,r,null)},instaparse.line_col.Cursor.prototype.cljs$core$ILookup$_lookup$arity$3=function(e,r,c){var s=this;switch(r instanceof cljs.core.Keyword?r.fqn:null){case"index":return s.index;case"line":return s.line;case"column":return s.column;default:return cljs.core.get.cljs$core$IFn$_invoke$arity$3(s.__extmap,r,c)}},instaparse.line_col.Cursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3=function(e,r,c){var s=this,n=function(e){return function(e){return cljs.core.pr_sequential_writer(r,cljs.core.pr_writer,""," ","",c,e)}}();return cljs.core.pr_sequential_writer(r,n,"#instaparse.line-col.Cursor{",", ","}",c,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$index,s.index],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$line,s.line],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$column,s.column],null)],null),s.__extmap))},instaparse.line_col.Cursor.prototype.cljs$core$IIterable$=!0,instaparse.line_col.Cursor.prototype.cljs$core$IIterable$_iterator$arity$1=function(e){var r=this,c=this;return new cljs.core.RecordIter(0,c,3,new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$index,cljs.core.cst$kw$line,cljs.core.cst$kw$column],null),cljs.core._iterator(r.__extmap))},instaparse.line_col.Cursor.prototype.cljs$core$IMeta$_meta$arity$1=function(e){var r=this;return r.__meta},instaparse.line_col.Cursor.prototype.cljs$core$ICloneable$_clone$arity$1=function(e){var r=this;return new instaparse.line_col.Cursor(r.index,r.line,r.column,r.__meta,r.__extmap,r.__hash)},instaparse.line_col.Cursor.prototype.cljs$core$ICounted$_count$arity$1=function(e){var r=this;return 3+cljs.core.count(r.__extmap)},instaparse.line_col.Cursor.prototype.cljs$core$IHash$_hash$arity$1=function(e){var r=this,c=this,s=r.__hash;if(null!=s)return s;var n=cljs.core.hash_imap(c);return r.__hash=n,n},instaparse.line_col.Cursor.prototype.cljs$core$IEquiv$_equiv$arity$2=function(e,r){var c=this;return!!cljs.core.truth_(function(){var e=r;if(cljs.core.truth_(e)){var s=c.constructor===r.constructor;return s?cljs.core.equiv_map(c,r):s}return e}())},instaparse.line_col.Cursor.prototype.cljs$core$IMap$_dissoc$arity$2=function(e,r){var c=this,s=this;return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,3,[cljs.core.cst$kw$index,null,cljs.core.cst$kw$column,null,cljs.core.cst$kw$line,null],null),null),r)?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,s),c.__meta),r):new instaparse.line_col.Cursor(c.index,c.line,c.column,c.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(c.__extmap,r)),null)},instaparse.line_col.Cursor.prototype.cljs$core$IAssociative$_assoc$arity$3=function(e,r,c){var s=this,n=cljs.core.keyword_identical_QMARK_,l=r;return cljs.core.truth_(n.cljs$core$IFn$_invoke$arity$2?n.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$index,l):n.call(null,cljs.core.cst$kw$index,l))?new instaparse.line_col.Cursor(c,s.line,s.column,s.__meta,s.__extmap,null):cljs.core.truth_(n.cljs$core$IFn$_invoke$arity$2?n.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$line,l):n.call(null,cljs.core.cst$kw$line,l))?new instaparse.line_col.Cursor(s.index,c,s.column,s.__meta,s.__extmap,null):cljs.core.truth_(n.cljs$core$IFn$_invoke$arity$2?n.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$column,l):n.call(null,cljs.core.cst$kw$column,l))?new instaparse.line_col.Cursor(s.index,s.line,c,s.__meta,s.__extmap,null):new instaparse.line_col.Cursor(s.index,s.line,s.column,s.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(s.__extmap,r,c),null)},instaparse.line_col.Cursor.prototype.cljs$core$ISeqable$_seq$arity$1=function(e){var r=this;return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$index,r.index],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$line,r.line],null),new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.cst$kw$column,r.column],null)],null),r.__extmap))},instaparse.line_col.Cursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2=function(e,r){var c=this;return new instaparse.line_col.Cursor(c.index,c.line,c.column,r,c.__extmap,c.__hash)},instaparse.line_col.Cursor.prototype.cljs$core$ICollection$_conj$arity$2=function(e,r){var c=this;return cljs.core.vector_QMARK_(r)?cljs.core._assoc(c,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(r,0),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(r,1)):cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,c,r)},instaparse.line_col.Cursor.getBasis=function(){return new cljs.core.PersistentVector(null,3,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.with_meta(cljs.core.cst$sym$index,new cljs.core.PersistentArrayMap(null,1,[cljs.core.cst$kw$tag,cljs.core.cst$sym$int],null)),cljs.core.with_meta(cljs.core.cst$sym$line,new cljs.core.PersistentArrayMap(null,1,[cljs.core.cst$kw$tag,cljs.core.cst$sym$long],null)),cljs.core.with_meta(cljs.core.cst$sym$column,new cljs.core.PersistentArrayMap(null,1,[cljs.core.cst$kw$tag,cljs.core.cst$sym$long],null))],null)},instaparse.line_col.Cursor.cljs$lang$type=!0,instaparse.line_col.Cursor.cljs$lang$ctorPrSeq=function(e){return cljs.core._conj(cljs.core.List.EMPTY,"instaparse.line-col/Cursor")},instaparse.line_col.Cursor.cljs$lang$ctorPrWriter=function(e,r){return cljs.core._write(r,"instaparse.line-col/Cursor")},instaparse.line_col.__GT_Cursor=function(e,r,c){return new instaparse.line_col.Cursor(e,r,c,null,null,null)},instaparse.line_col.map__GT_Cursor=function(e){return new instaparse.line_col.Cursor(cljs.core.cst$kw$index.cljs$core$IFn$_invoke$arity$1(e),cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(e),cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(e),null,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(e,cljs.core.cst$kw$index,cljs.core.array_seq([cljs.core.cst$kw$line,cljs.core.cst$kw$column],0)),null)},instaparse.line_col.advance_cursor=function(e,r,c){var s=0|c;if(!(e.index<=s))throw new Error("Assert failed: (<= (.-index cursor) new-index)");if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e.index,s))return e;for(var n=e.index,l=e.line,o=e.column;;){if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,s))return new instaparse.line_col.Cursor(n,l,o,null,null,null);if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r.charAt(n),"\n")){var t=n+1,$=l+1;n=t,l=$,o=1}else{var i=n+1,a=l,_=o+1;n=i,l=a,o=_}}},instaparse.line_col.make_line_col_fn=function(e){var r=function(){var e=new instaparse.line_col.Cursor(0,1,1,null,null,null);return cljs.core.atom.cljs$core$IFn$_invoke$arity$1?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(e):cljs.core.atom.call(null,e)}();return function(r){return function(c){return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(r,instaparse.line_col.advance_cursor,e,c),cljs.core.deref.cljs$core$IFn$_invoke$arity$1?cljs.core.deref.cljs$core$IFn$_invoke$arity$1(r):cljs.core.deref.call(null,r)}}(r)},instaparse.line_col.hiccup_add_line_col_spans=function e(r,c){var s=cljs.core.meta(c),n=cljs.core.cst$kw$instaparse$gll_SLASH_start_DASH_index.cljs$core$IFn$_invoke$arity$1(s),l=cljs.core.cst$kw$instaparse$gll_SLASH_end_DASH_index.cljs$core$IFn$_invoke$arity$1(s);if(cljs.core.truth_(function(){var e=n;return cljs.core.truth_(e)?l:e}())){var o=r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(n):r.call(null,n),t=cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(e,r),cljs.core.next(c))),$=r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(l):r.call(null,l);return cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null,1,5,cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.first(c)],null),t),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(c),new cljs.core.PersistentArrayMap(null,4,[cljs.core.cst$kw$instaparse$gll_SLASH_start_DASH_line,cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(o),cljs.core.cst$kw$instaparse$gll_SLASH_start_DASH_column,cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(o),cljs.core.cst$kw$instaparse$gll_SLASH_end_DASH_line,cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1($),cljs.core.cst$kw$instaparse$gll_SLASH_end_DASH_column,cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1($)],null)],0)))}return c},instaparse.line_col.enlive_add_line_col_spans=function e(r,c){var s=cljs.core.meta(c),n=cljs.core.cst$kw$instaparse$gll_SLASH_start_DASH_index.cljs$core$IFn$_invoke$arity$1(s),l=cljs.core.cst$kw$instaparse$gll_SLASH_end_DASH_index.cljs$core$IFn$_invoke$arity$1(s);if(cljs.core.truth_(function(){var e=n;return cljs.core.truth_(e)?l:e}())){var o=r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(n):r.call(null,n),t=cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(e,r),cljs.core.cst$kw$content.cljs$core$IFn$_invoke$arity$1(c))),$=r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(l):r.call(null,l);return cljs.core.with_meta(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c,cljs.core.cst$kw$content,t),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(c),new cljs.core.PersistentArrayMap(null,4,[cljs.core.cst$kw$instaparse$gll_SLASH_start_DASH_line,cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(o),cljs.core.cst$kw$instaparse$gll_SLASH_start_DASH_column,cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(o),cljs.core.cst$kw$instaparse$gll_SLASH_end_DASH_line,cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1($),cljs.core.cst$kw$instaparse$gll_SLASH_end_DASH_column,cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1($)],null)],0)))}return c},instaparse.line_col.add_line_col_spans=function(e,r){var c=instaparse.line_col.make_line_col_fn(e);if(null==r)return null;if(cljs.core.truth_(function(){var e=cljs.core.map_QMARK_(r);return e?cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(r):e}()))return instaparse.line_col.enlive_add_line_col_spans(c,r);if(cljs.core.vector_QMARK_(r)&&cljs.core.first(r)instanceof cljs.core.Keyword)return instaparse.line_col.hiccup_add_line_col_spans(c,r);if(cljs.core.truth_(function(){var e=cljs.core.sequential_QMARK_(r);if(e){var c=cljs.core.map_QMARK_(cljs.core.first(r));return c?cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.first(r)):c}return e}()))return instaparse.transform.map_preserving_meta(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.line_col.enlive_add_line_col_spans,c),r);if(cljs.core.sequential_QMARK_(r)&&cljs.core.vector_QMARK_(cljs.core.first(r))&&cljs.core.first(cljs.core.first(r))instanceof cljs.core.Keyword)return instaparse.transform.map_preserving_meta(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.line_col.hiccup_add_line_col_spans,c),r);if(r instanceof instaparse.gll.Failure)return r;throw"Invalid parse-tree, not recognized as either enlive or hiccup format."};