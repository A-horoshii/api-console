goog.provide("instaparse.print"),goog.require("cljs.core"),goog.require("clojure.string"),instaparse.print.paren_for_tags=function(r,c,n){return cljs.core.truth_(function(){var e=cljs.core.not(c);if(e){var s=n.cljs$core$IFn$_invoke$arity$1?n.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$tag):n.call(null,cljs.core.cst$kw$tag);return r.cljs$core$IFn$_invoke$arity$1?r.cljs$core$IFn$_invoke$arity$1(s):r.call(null,s)}return e}())?[cljs.core.str("("),cljs.core.str(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2?instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(n,!1):instaparse.print.combinators__GT_str.call(null,n,!1)),cljs.core.str(")")].join(""):instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2?instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(n,!1):instaparse.print.combinators__GT_str.call(null,n,!1)},instaparse.print.paren_for_compound=cljs.core.partial.cljs$core$IFn$_invoke$arity$2(instaparse.print.paren_for_tags,new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,3,[cljs.core.cst$kw$cat,null,cljs.core.cst$kw$ord,null,cljs.core.cst$kw$alt,null],null),null)),instaparse.print.regexp_replace=function(r){switch(r){case"\n":return"\\n";case"\b":return"\\b";case"\f":return"\\f";case"\r":return"\\r";case"\t":return"\\t";default:return r}},instaparse.print.regexp__GT_str=function(r){return clojure.string.replace([cljs.core.str('#"'),cljs.core.str(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(r.source,1)),cljs.core.str('"')].join(""),/[\s]/,instaparse.print.regexp_replace)},instaparse.print.number__GT_hex_padded=function(r){return r<=4095?[cljs.core.str("0000"),cljs.core.str(r.toString(16))].join("").substr(-4):r.toString(16)},instaparse.print.char_range__GT_str=function(r){var c=r,n=null==c||!(64&c.cljs$lang$protocol_mask$partition0$||c.cljs$core$ISeq$)?c:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,c),e=cljs.core.get.cljs$core$IFn$_invoke$arity$2(n,cljs.core.cst$kw$lo),s=cljs.core.get.cljs$core$IFn$_invoke$arity$2(n,cljs.core.cst$kw$hi);return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e,s)?[cljs.core.str("%x"),cljs.core.str(instaparse.print.number__GT_hex_padded(e))].join(""):[cljs.core.str("%x"),cljs.core.str(instaparse.print.number__GT_hex_padded(e)),cljs.core.str("-"),cljs.core.str(instaparse.print.number__GT_hex_padded(s))].join("")},instaparse.print.combinators__GT_str=function(r){for(var c=[],n=arguments.length,e=0;;){if(!(e<n))break;c.push(arguments[e]);e=e+1}switch(c.length){case 1:return instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1(arguments[0]);case 2:return instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);default:throw new Error([cljs.core.str("Invalid arity: "),cljs.core.str(c.length)].join(""))}},instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1=function(r){return instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(r,!1)},instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2=function(r,c){var n=r,e=null==n||!(64&n.cljs$lang$protocol_mask$partition0$||n.cljs$core$ISeq$)?n:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,n),s=e,o=cljs.core.get.cljs$core$IFn$_invoke$arity$2(e,cljs.core.cst$kw$parser),t=cljs.core.get.cljs$core$IFn$_invoke$arity$2(e,cljs.core.cst$kw$parser1),$=cljs.core.get.cljs$core$IFn$_invoke$arity$2(e,cljs.core.cst$kw$parser2),l=cljs.core.get.cljs$core$IFn$_invoke$arity$2(e,cljs.core.cst$kw$parsers),i=cljs.core.get.cljs$core$IFn$_invoke$arity$2(e,cljs.core.cst$kw$tag);if(cljs.core.truth_(function(){var r=cljs.core.not(c);return r?cljs.core.cst$kw$hide.cljs$core$IFn$_invoke$arity$1(s):r}()))return[cljs.core.str("<"),cljs.core.str(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$2(s,!0)),cljs.core.str(">")].join("");var a=i instanceof cljs.core.Keyword?i.fqn:null;switch(a){case"neg":return[cljs.core.str("!"),cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o))].join("");case"cat":return clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ",cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(instaparse.print.paren_for_tags,new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,2,[cljs.core.cst$kw$ord,null,cljs.core.cst$kw$alt,null],null),null),c),l));case"ord":return[cljs.core.str(instaparse.print.paren_for_tags(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,1,[cljs.core.cst$kw$alt,null],null),null),c,t)),cljs.core.str(" / "),cljs.core.str(instaparse.print.paren_for_tags(new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,1,[cljs.core.cst$kw$alt,null],null),null),c,$))].join("");case"alt":return clojure.string.join.cljs$core$IFn$_invoke$arity$2(" | ",cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(instaparse.print.paren_for_tags,new cljs.core.PersistentHashSet(null,new cljs.core.PersistentArrayMap(null,1,[cljs.core.cst$kw$ord,null],null),null),c),l));case"look":return[cljs.core.str("&"),cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o))].join("");case"nt":return cljs.core.subs.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$keyword.cljs$core$IFn$_invoke$arity$1(s))].join(""),1);case"rep":return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$min.cljs$core$IFn$_invoke$arity$1(s),cljs.core.cst$kw$max.cljs$core$IFn$_invoke$arity$1(s))?[cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o)),cljs.core.str("{"),cljs.core.str(cljs.core.cst$kw$min.cljs$core$IFn$_invoke$arity$1(s)),cljs.core.str(","),cljs.core.str(cljs.core.cst$kw$max.cljs$core$IFn$_invoke$arity$1(s)),cljs.core.str("}")].join(""):[cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o)),cljs.core.str("{"),cljs.core.str(cljs.core.cst$kw$min.cljs$core$IFn$_invoke$arity$1(s)),cljs.core.str("}")].join("");case"star":return[cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o)),cljs.core.str("*")].join("");case"string":var _=new goog.string.StringBuffer,j=cljs.core._STAR_print_newline_STAR_,p=cljs.core._STAR_print_fn_STAR_;cljs.core._STAR_print_newline_STAR_=!0,cljs.core._STAR_print_fn_STAR_=function(r,c,n,e,s,o,t,$,l,i,a,_){return function(r){return n.append(r)}}(0,0,_);try{cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.cst$kw$string.cljs$core$IFn$_invoke$arity$1(s)],0))}finally{cljs.core._STAR_print_fn_STAR_=p,cljs.core._STAR_print_newline_STAR_=j}return[cljs.core.str(_)].join("");case"regexp":return instaparse.print.regexp__GT_str(cljs.core.cst$kw$regexp.cljs$core$IFn$_invoke$arity$1(s));case"plus":return[cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o)),cljs.core.str("+")].join("");case"epsilon":return"Îµ";case"string-ci":var _=new goog.string.StringBuffer,u=cljs.core._STAR_print_newline_STAR_,k=cljs.core._STAR_print_fn_STAR_;cljs.core._STAR_print_newline_STAR_=!0,cljs.core._STAR_print_fn_STAR_=function(r,c,n,e,s,o,t,$,l,i,a,_){return function(r){return n.append(r)}}(0,0,_);try{cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.cst$kw$string.cljs$core$IFn$_invoke$arity$1(s)],0))}finally{cljs.core._STAR_print_fn_STAR_=k,cljs.core._STAR_print_newline_STAR_=u}return[cljs.core.str(_)].join("");case"char":return instaparse.print.char_range__GT_str(s);case"opt":return[cljs.core.str(instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2?instaparse.print.paren_for_compound.cljs$core$IFn$_invoke$arity$2(c,o):instaparse.print.paren_for_compound.call(null,c,o)),cljs.core.str("?")].join("");default:throw new Error([cljs.core.str("No matching clause: "),cljs.core.str(i)].join(""))}},instaparse.print.combinators__GT_str.cljs$lang$maxFixedArity=2,instaparse.print.rule__GT_str=function(r,c){return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reduction_DASH_type.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$red.cljs$core$IFn$_invoke$arity$1(c)),cljs.core.cst$kw$raw)?[cljs.core.str("<"),cljs.core.str(cljs.core.name(r)),cljs.core.str(">"),cljs.core.str(" = "),cljs.core.str(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1(c))].join(""):[cljs.core.str(cljs.core.name(r)),cljs.core.str(" = "),cljs.core.str(instaparse.print.combinators__GT_str.cljs$core$IFn$_invoke$arity$1(c))].join("")},instaparse.print.Parser__GT_str=function(r){var c=r,n=null==c||!(64&c.cljs$lang$protocol_mask$partition0$||c.cljs$core$ISeq$)?c:cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,c),e=cljs.core.get.cljs$core$IFn$_invoke$arity$2(n,cljs.core.cst$kw$grammar),s=cljs.core.get.cljs$core$IFn$_invoke$arity$2(n,cljs.core.cst$kw$start_DASH_production);return clojure.string.join.cljs$core$IFn$_invoke$arity$2("\n",cljs.core.cons(instaparse.print.rule__GT_str(s,e.cljs$core$IFn$_invoke$arity$1?e.cljs$core$IFn$_invoke$arity$1(s):e.call(null,s)),function(){return function(r,c,n,e){return function r(c){return new cljs.core.LazySeq(null,function(n,e,s,o){return function(){for(var n=c;;){var e=cljs.core.seq(n);{if(!e)return null;var s=e;if(cljs.core.chunked_seq_QMARK_(s)){var t=cljs.core.chunk_first(s),$=cljs.core.count(t),l=cljs.core.chunk_buffer($);return function(){for(var r=0;;){if(!(r<$))return!0;var c=cljs.core._nth.cljs$core$IFn$_invoke$arity$2(t,r),n=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c,0,null),e=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c,1,null);if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(n,o)){cljs.core.chunk_append(l,instaparse.print.rule__GT_str(n,e));r=r+1}else{r=r+1}}}()?cljs.core.chunk_cons(cljs.core.chunk(l),r(cljs.core.chunk_rest(s))):cljs.core.chunk_cons(cljs.core.chunk(l),null)}var i=cljs.core.first(s),a=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(i,0,null),_=cljs.core.nth.cljs$core$IFn$_invoke$arity$3(i,1,null);if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(a,o))return cljs.core.cons(instaparse.print.rule__GT_str(a,_),r(cljs.core.rest(s)));n=cljs.core.rest(s)}}}}(0,0,0,e),null,null)}}(0,0,0,s)(e)}()))};